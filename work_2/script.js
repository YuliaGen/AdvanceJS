// Задание 2
// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. Клиенты приходят и делают заказы на разные блюда.

// Необходимо создать систему управления этими заказами, которая позволит:

// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.

// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.

// Повара и их специализации:

// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:

// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:

// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.


const dichAndShefs = new Map();
dichAndShefs.set("Пицца 'Маргарита'", "повар: Виктор")
    .set("Пицца 'Пепперони'", "повар: Виктор")
    .set("Суши 'Филадельфия'", "повар: Ольга")
    .set("Суши 'Калифорния'", "повар: Ольга")
    .set("Тирамису", "повар: Дмитрий")
    .set("Чизкейк", "повар: Дмитрий");

const orders = new Map();

orders.set({ name: "Алексей", order: ["Пицца 'Пепперони'", "Тирамису"] })
    .set({ name: "Мария", order: ["Суши 'Калифорния'", "Пицца 'Маргарита'"] })
    .set({ name: "Ирина", order: ["Чизкейк"] });



for (let [client, order] of orders) {
    console.log(`${client.name} заказал: ${client.order.join(", ")}`);
    for (let dish of client.order) {
        console.log(dish, dichAndShefs.get(dish));
    }
}

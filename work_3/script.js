
// Задание 1
// Представьте, что у вас есть класс для управления библиотекой. В этом классе будет приватное свойство для хранения списка книг, а также методы для добавления книги, удаления книги и получения информации о наличии книги.

// Класс должен содержать приватное свойство #books, которое инициализируется пустым массивом и представляет собой список книг в библиотеке.

// Реализуйте геттер allBooks, который возвращает текущий список книг.

// Реализуйте метод addBook(title), который позволяет добавлять книгу в список. Если книга с таким названием уже существует в списке, выбросьте ошибку с соответствующим сообщением.

// Реализуйте метод removeBook(title), который позволит удалять книгу из списка по названию. Если книги с таким названием нет в списке, выбросьте ошибку с соответствующим сообщением.

// Реализуйте метод hasBook(title), который будет проверять наличие книги в библиотеке и возвращать true или false в зависимости от того, есть ли такая книга в списке или нет.

// Реализуйте конструктор, который принимает начальный список книг (массив) в качестве аргумента. Убедитесь, что предоставленный массив не содержит дубликатов; в противном случае выбрасывайте ошибку.

class Biblio {
        #books = [];

        constructor(arrBooks = []) {
                if (arrBooks.length !== new Set(arrBooks).size) {
                        throw new Error('список не может содержать дубликатов.');
                }
                this.#books = arrBooks;
        };
        get allBooks() {
                return this.#books;
        };

        addBook(title) {
                if (this.hasBook(title)) {
                        throw new Error("Эта книга уже есть");
                } else {
                        this.#books.push(title);
                }
        }


        removeBook(title) {
                if (!this.hasBook(title)) {
                        throw new Error("Такой книги нет");
                } else {
                        this.#books.splice(this.#books.indexOf(title), 1);
                }
        };

        hasBook(title) {
                return this.#books.includes(title);
        };
}

let library = new Biblio(['Онегин', 'Обломов', 'Будденброки', 'Заступа']);
console.log(library.allBooks);

library.addBook('5 языков любви');
console.log('Добавление книги. В библиотеке: ', library.allBooks);

library.removeBook('Обломов');
console.log('Удаление книги. В библиотеке: ', library.allBooks);

library.removeBook('Идиот');
console.log('Удаление книги. В библиотеке: ', library.allBooks);